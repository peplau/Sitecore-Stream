---
ID: "e0d8c216-6bc3-4770-9465-a9ef0bf164fb"
Parent: "be1e0ade-3425-437f-8ce9-fb6c7f58aa74"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/Sitecore Flow/Sitecore Flow/Functions/Functions
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    Import-Function -Name Constants  -Module "Sitecore Flow"
    
    function Get-Settings {
        $settings = Get-Item -Path "master:$($SitecoreFlow_Settings_Path)"
        return $settings;
    }
    
    function Get-Assistants {
        $assistantsRoot = Get-Item -Path "master:$($SitecoreFlow_Assistants_Path)"
        $ret = $assistantsRoot.Children
        $ret = @($ret)
        return $ret;
    }
    
    function Get-FieldValue(){
        param( $item, $fieldName, $defaultValue = "" )
        $field = $item.Fields[$fieldName]
        if ($field -eq $null){
            return $defaultValue
        }
        return $field.Value
    }
    
    function CleanString($rawString) {
        $cleanPlainText = $rawString -replace '(\\*)"', '$1$1\"'
        $cleanPlainText = $cleanPlainText -replace '[^\w\s.,-]', ''
        $maxLength = 40000
        if ($cleanPlainText.Length -gt $maxLength){
            $cleanPlainText = $cleanPlainText.Substring(0, $maxLength)
        }
        return $cleanPlainText
    }
    
    function Invoke-ChatGptExtraction($plainText, $apiKey, $model, $connectApiToken) {
        $pair = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($SitecoreFlow_Collection_Username+":"+$connectApiToken))
        $headers = @{
            "apiKey" = $apiKey
            "Authorization" = "Basic $pair"
            "Content-Type"  = "application/json"
        }
    
        # Remove special characters from plainText
        $cleanPlainText = CleanString $plainText
    
        $body = @{
            plainText = $cleanPlainText
            model = $model
        } | ConvertTo-Json -Depth 10 -Compress
    
        try {
            $response = Invoke-RestMethod -Uri $SitecoreFlow_ExtractContentWithAI_URL -Headers $headers -Method Post -Body $body
            return $response
        }
        catch {
            Write-Host "Error calling ChatGPT API: $_"
            [Sitecore.Diagnostics.Log]::Error("ERROR: $($body)", "PowerShellScript")        
            return $null
        }
    }
    
    function Clear-ExtractedContentFromSitecore($item) {
        $item.Editing.BeginEdit()
        try {
            $item["Brand Purpose"]              = ""
            $item["Brand History"]              = ""
            $item["Brand Benefits"]             = ""
            $item["Brand Context"]              = ""
            $item["Brand Beliefs and Benefits"] = ""
            $item["Tone of Voice"]              = ""
            $item["Visual guidance"]            = ""
            $item["Image Style"]                = ""
            Write-Host "Item cleaned successfully: $($item.Paths.FullPath)"
        }
        catch {
            Write-Host "Error cleaning item $($item.Paths.FullPath): $_"
        }
        finally {
            $item.Editing.EndEdit()
        }
    }
    
    function Save-ExtractedContentToSitecore($item, $content) {
        $item.Editing.BeginEdit()
        try {
            $item["Brand Purpose"]              += $content."Brand_Purpose"
            $item["Brand History"]              += $content."Brand_History"
            $item["Brand Benefits"]             += $content."Brand_Benefits"
            $item["Brand Context"]              += $content."Brand_Context"
            $item["Brand Beliefs and Benefits"] += $content."Brand_Beliefs_and_Benefits"
            $item["Tone of Voice"]              += $content."Tone_of_Voice"
            $item["Visual guidance"]            += $content."Visual_guidance"
            $item["Image Style"]                += $content."Image_Style"
            Write-Host "Item updated successfully: $($item.Paths.FullPath)"
        }
        catch {
            Write-Host "Error updating item $($item.Paths.FullPath): $_"
        }
        finally {
            $item.Editing.EndEdit()
        }
    }
    
    function Get-PlainTextFromPdf() {
        param( 
            [System.IO.Stream]$mediaStream,
            [string]$fileName
        )
    
        try {
            # Copy the PDF stream to a temporary file to avoid memory stream issues
            $tempFilePath = [System.IO.Path]::Combine([System.IO.Path]::GetTempPath(), $fileName)
            $tempFile = [System.IO.File]::Create($tempFilePath)
            $mediaStream.CopyTo($tempFile)
            $tempFile.Close()
    
            $pdf = New-Object iTextSharp.text.pdf.pdfreader -ArgumentList $tempFilePath
            
            # Initialize the $plainText variable before usage
            $plainText = New-Object System.Text.StringBuilder
            
        	for ($page = 1; $page -le $pdf.NumberOfPages; $page++){
    	    	$text=[iTextSharp.text.pdf.parser.PdfTextExtractor]::GetTextFromPage($pdf,$page)
    	  	    [void]$plainText.AppendLine($text)
    	    }	
    	   
    	    $pdf.Close()
    	    
    	    # Optionally remove the temporary file after extraction
            Remove-Item -Path $tempFilePath -Force
           
            Write-Host  $plainText.ToString()
            return $plainText.ToString()
           
        }
        catch {
            Write-Host "Error extracting text from PDF: $_"
            if ($_.Exception.InnerException) {
                Write-Host "Inner Exception Details: $($_.Exception.InnerException.Message)"
            }
            return $null
        }
    }
    
    function Get-SerializedItem() {
        param(
            $contextItem
        )
        $simplerObject = @{
            ItemName = $contextItem.Name
            Fields = @()
        }
        foreach($field in $contextItem.Fields){
            $typedField = [Sitecore.Data.Fields.FieldTypeManager]::GetField($field)
            if (($typedField -is [Sitecore.Data.Fields.TextField] -or $typedField -is [Sitecore.Data.Fields.HtmlField]) -and $field.Name.StartsWith("__") -ne $true){
                $simplerObject.Fields += @{ $field.Name = $field.Value }
            }
        }
        $serialized = $simplerObject | ConvertTo-Json
        return $serialized
    }
    
    function Convert-MarkdownToHtml(){
        param( $markdownText )
        [System.Reflection.Assembly]::LoadWithPartialName("MarkdownSharp") | Out-Null
        $markdown = New-Object MarkdownSharp.Markdown
        $html = $markdown.Transform($markdownText)
        $html = $html -replace "<strong>", "<b>" -replace "</strong>", "</b>"
        return $html
    }
    
    function Check-TextCompliance($serializedItem, $serializedAssistant, $apiKey, $model, $connectApiToken) {
        $pair = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($SitecoreFlow_Collection_Username+":"+$connectApiToken))
        
        $headers = @{
            "apiKey" = $apiKey
            "Authorization" = "Basic $pair"
        }
    
        $body = @{
            content = $serializedItem
            brandGuidelines = $serializedAssistant
            model = $model
        } | ConvertTo-Json -Depth 10 -Compress
    
        try {
            $response = Invoke-RestMethod -Uri $SitecoreFlow_CheckBrandCompliance_URL -Headers $headers -Method Post -Body $body
            $retString = $response
            return $retString
        }
        catch {
            Write-Host "Error calling ChatGPT API: $_"
            return $null
        }
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20250308T043922Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\rpeplau
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\rpeplau
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "dc97ead7-c00e-4dfd-a4f1-423ed0e0f471"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\Admin
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20250903T151135Z
