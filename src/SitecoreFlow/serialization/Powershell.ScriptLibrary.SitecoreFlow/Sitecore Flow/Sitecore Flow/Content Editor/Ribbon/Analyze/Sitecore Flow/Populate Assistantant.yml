---
ID: "9701b6fd-a9a7-4b82-9e2b-6b1219a7a76f"
Parent: "8deeed76-cf5d-4a62-895e-bebb81ba0227"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/Sitecore Flow/Sitecore Flow/Content Editor/Ribbon/Analyze/Sitecore Flow/Populate Assistantant
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: /~/icon/applications/32x32/gear_run.png
- ID: "1c76313e-3c8c-4807-a826-135d10c39299"
  Hint: ShowRule
  Value: |
    <ruleset>
      <rule
        uid="{E89B9F21-CFC5-4D2D-AD1E-2D646CC288C6}">
        <conditions>
          <condition
            id="{5DE6D53E-EA62-4D17-8BDD-FEBCD80AC07B}"
            uid="2F749E5EA8AD4B0286F8497B80C353E0"
            templateid="{F5C68DC5-CD57-41CE-B241-98DF18BE8994}" />
        </conditions>
      </rule>
    </ruleset>
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    $assistantItem = $SitecoreContextItem
    Import-Function -Name Functions -Module "Sitecore Flow"
    Import-Function -Name LoadSettings -Module "Sitecore Flow"
    
    ### Loop on the uploaded documents
    $documents = $assistantItem.Children | Where-Object { $_.TemplateID -eq $SitecoreFlow_Document_TemplateID }
    $documents = @($documents)
    $ind = 0;
    
    foreach ($docItem in $documents) {
        ### Get document to be processed
        $documentPath = Get-FieldValue $docItem $SitecoreFlow_Document_Document_FieldName $null
        $mediaItem = Get-Item -Path "master:$documentPath"
    
        if (Test-BaseTemplate -Item $mediaItem -Template $SitecoreFlow_Pdf_TemplateID) {
            # Clean the fields if this is the first one 
            if ($ind -eq 0){
                Clear-ExtractedContentFromSitecore $assistantItem
                $ind++;
            }
            
            # Get the media stream
            $mediaItem = [Sitecore.Data.Items.MediaItem]$mediaItem
            $media = [Sitecore.Resources.Media.MediaManager]::GetMedia($mediaItem)
            $mediaStream = $media.GetStream().Stream
    
            # Extract plain text from PDF
            $plainText = Get-PlainTextFromPdf $mediaStream "$($mediaItem.Name).$($mediaItem.Extension)"
    
            if ($plainText -and $plainText.Trim() -ne "") {
                # Save extracted text to Sitecore item
                $docItem.Editing.BeginEdit()
                try {
                    $docItem["Plain Text"] = $plainText
                    Write-Host "Plain Text updated successfully for item: $($docItem.Paths.FullPath)"
                }
                catch {
                    Write-Host "Error updating item $($docItem.Paths.FullPath): $_"
                }
                finally {
                    $docItem.Editing.EndEdit()
                }
    
                # Call ChatGPT function to extract specific information
                $chatGptContent = Invoke-ChatGptExtraction -plainText $plainText -apiKey $apiKey -model $model -connectApiToken $connectApiToken
    
                if ($chatGptContent) {
                    # Save extracted fields to Assistant item
                    Save-ExtractedContentToSitecore -item $assistantItem -content $chatGptContent
                }
            }
            else {
                Write-Host "No plain text extracted for item: $($docItem.Paths.FullPath)"
            }
        }
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20250308T050341Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\rpeplau
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\rpeplau
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "f91a1a24-3d4f-49ef-b341-ad35809e1e8f"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\Admin
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20250903T150807Z
